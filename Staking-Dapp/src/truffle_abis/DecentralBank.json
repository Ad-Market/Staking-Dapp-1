{
  "contractName": "DecentralBank",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract RWD",
          "name": "_rwd",
          "type": "address"
        },
        {
          "internalType": "contract Tether",
          "name": "_tether",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rwd",
      "outputs": [
        {
          "internalType": "contract RWD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBlanace",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tether",
      "outputs": [
        {
          "internalType": "contract Tether",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract RWD\",\"name\":\"_rwd\",\"type\":\"address\"},{\"internalType\":\"contract Tether\",\"name\":\"_tether\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rwd\",\"outputs\":[{\"internalType\":\"contract RWD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBlanace\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tether\",\"outputs\":[{\"internalType\":\"contract Tether\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/DecentralBank.sol\":\"DecentralBank\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/DecentralBank.sol\":{\"keccak256\":\"0xbe56363cec516c873dca65ff5a4a2192b069bdcbf35b8fdd335c644e39e9fb5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b445a4537b18f40320794411574b3c243c935fdf167e5ca3ac21424a51a60740\",\"dweb:/ipfs/QmPWmhNCBsAQ34MQJDffYts183yeRFiFGQdMyrGVgMmXL9\"]},\"project:/src/contracts/RWD.sol\":{\"keccak256\":\"0x1c6f0c159c645cc9cb28f995d306b194933b842d6f7db2a098467ab40e835a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca6e6b6d49fad4db9aa9a72cc7145da03a99dc31233a7404a9a05439922f7043\",\"dweb:/ipfs/QmPdDd6Gzon5FYbQAFAAFQDrSHv6uiCypWFZgtpYXYfHfs\"]},\"project:/src/contracts/Tether.sol\":{\"keccak256\":\"0xde283322e46229cb01769efc667c8a4341fe73d14053cbe7c40122b8e228d973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bfeb0bc2da313ccb2730fb95ca676ca18bcb5b5955b13c836deef7d35f386cb\",\"dweb:/ipfs/QmcJGGP4qScuDwFMn6sRkXXt6ZdjCLAfZH9H9oFYAuQR4a\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146101425780638fe9e48614610160578063a5ce413b14610190578063c93c8f341461019a578063dd49756e146101ca578063fd5e6dd1146101e6576100a9565b806306fdde03146100ae5780631a8972d3146100cc5780635efc071a146100ea57806360ab5852146101085780636f49712b14610112575b600080fd5b6100b6610216565b6040516100c39190610a7d565b60405180910390f35b6100d46102a4565b6040516100e19190610b1e565b60405180910390f35b6100f26102ca565b6040516100ff9190610b5a565b60405180910390f35b6101106102f0565b005b61012c60048036038101906101279190610bb8565b610465565b6040516101399190610c00565b60405180910390f35b61014a610485565b6040516101579190610c2a565b60405180910390f35b61017a60048036038101906101759190610bb8565b6104ab565b6040516101879190610c5e565b60405180910390f35b6101986104c3565b005b6101b460048036038101906101af9190610bb8565b61069a565b6040516101c19190610c00565b60405180910390f35b6101e460048036038101906101df9190610ca5565b6106ba565b005b61020060048036038101906101fb9190610ca5565b6109a5565b60405161020d9190610c2a565b60405180910390f35b6000805461022390610d01565b80601f016020809104026020016040519081016040528092919081815260200182805461024f90610d01565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b6004805490508110156104625760006004828154811061031657610315610d33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006009600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103919190610dc0565b9050600081111561044d57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016103f9929190610df1565b602060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044b9190610e46565b505b5050808061045a90610e73565b9150506102f3565b50565b60076020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610f2e565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105a7929190610df1565b602060405180830381600087803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f99190610e46565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60066020528060005260406000206000915054906101000a900460ff1681565b600081116106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490610f9a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161075c93929190610fba565b602060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610e46565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107fa9190610ff1565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108f2576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600481815481106109b557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a1e578082015181840152602081019050610a03565b83811115610a2d576000848401525b50505050565b6000601f19601f8301169050919050565b6000610a4f826109e4565b610a5981856109ef565b9350610a69818560208601610a00565b610a7281610a33565b840191505092915050565b60006020820190508181036000830152610a978184610a44565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ae4610adf610ada84610a9f565b610abf565b610a9f565b9050919050565b6000610af682610ac9565b9050919050565b6000610b0882610aeb565b9050919050565b610b1881610afd565b82525050565b6000602082019050610b336000830184610b0f565b92915050565b6000610b4482610aeb565b9050919050565b610b5481610b39565b82525050565b6000602082019050610b6f6000830184610b4b565b92915050565b600080fd5b6000610b8582610a9f565b9050919050565b610b9581610b7a565b8114610ba057600080fd5b50565b600081359050610bb281610b8c565b92915050565b600060208284031215610bce57610bcd610b75565b5b6000610bdc84828501610ba3565b91505092915050565b60008115159050919050565b610bfa81610be5565b82525050565b6000602082019050610c156000830184610bf1565b92915050565b610c2481610b7a565b82525050565b6000602082019050610c3f6000830184610c1b565b92915050565b6000819050919050565b610c5881610c45565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b610c8281610c45565b8114610c8d57600080fd5b50565b600081359050610c9f81610c79565b92915050565b600060208284031215610cbb57610cba610b75565b5b6000610cc984828501610c90565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d1957607f821691505b60208210811415610d2d57610d2c610cd2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dcb82610c45565b9150610dd683610c45565b925082610de657610de5610d62565b5b828204905092915050565b6000604082019050610e066000830185610c1b565b610e136020830184610c4f565b9392505050565b610e2381610be5565b8114610e2e57600080fd5b50565b600081519050610e4081610e1a565b92915050565b600060208284031215610e5c57610e5b610b75565b5b6000610e6a84828501610e31565b91505092915050565b6000610e7e82610c45565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb157610eb0610d91565b5b600182019050919050565b7f63616e6e6f7420756e7374616b652076616c756573206c657373207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000610f186024836109ef565b9150610f2382610ebc565b604082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f616d6f756e742063616e6e6f7420626520300000000000000000000000000000600082015250565b6000610f846012836109ef565b9150610f8f82610f4e565b602082019050919050565b60006020820190508181036000830152610fb381610f77565b9050919050565b6000606082019050610fcf6000830186610c1b565b610fdc6020830185610c1b565b610fe96040830184610c4f565b949350505050565b6000610ffc82610c45565b915061100783610c45565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561103c5761103b610d91565b5b82820190509291505056fea2646970667358221220c6cc82356d4a3e50fc31be0b8834ca56702420efa512397ec505139cdceaa8e464736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2523:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:4",
                "type": ""
              }
            ],
            "src": "466:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "634:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "663:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "645:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "634:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_RWD_$440",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "616:7:4",
                "type": ""
              }
            ],
            "src": "568:107:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:90:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "803:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "812:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "805:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "805:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "805:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "758:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "794:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_RWD_$440",
                              "nodeType": "YulIdentifier",
                              "src": "765:28:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "765:35:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "755:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:46:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "748:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:54:4"
                  },
                  "nodeType": "YulIf",
                  "src": "745:74:4"
                }
              ]
            },
            "name": "validator_revert_t_contract$_RWD_$440",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "728:5:4",
                "type": ""
              }
            ],
            "src": "681:144:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "905:91:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "915:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "930:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "924:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "915:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "984:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_RWD_$440",
                      "nodeType": "YulIdentifier",
                      "src": "946:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:44:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "946:44:4"
                }
              ]
            },
            "name": "abi_decode_t_contract$_RWD_$440_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "883:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "891:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "899:5:4",
                "type": ""
              }
            ],
            "src": "831:165:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1061:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1071:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1100:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1082:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1082:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1071:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Tether_$621",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1043:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1053:7:4",
                "type": ""
              }
            ],
            "src": "1002:110:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1175:93:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1246:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1255:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1258:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1248:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1248:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1248:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1198:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1237:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Tether_$621",
                              "nodeType": "YulIdentifier",
                              "src": "1205:31:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1205:38:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1195:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:49:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1188:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:57:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1185:77:4"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Tether_$621",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1168:5:4",
                "type": ""
              }
            ],
            "src": "1118:150:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1351:94:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1361:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1376:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1370:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1370:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1361:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1433:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Tether_$621",
                      "nodeType": "YulIdentifier",
                      "src": "1392:40:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1392:47:4"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Tether_$621_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1329:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1337:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1345:5:4",
                "type": ""
              }
            ],
            "src": "1274:171:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1570:438:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1616:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1618:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1618:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1618:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1591:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1600:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1587:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1587:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1612:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1583:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1583:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1580:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1709:139:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1724:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1738:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1728:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1753:85:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1810:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1821:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1806:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1806:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1830:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_RWD_$440_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1763:42:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1763:75:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1753:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1858:143:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1873:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1887:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1877:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1903:88:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1963:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1974:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1959:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1959:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1983:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Tether_$621_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1913:45:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1913:78:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1903:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_RWD_$440t_contract$_Tether_$621_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1532:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1543:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1555:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1563:6:4",
                "type": ""
              }
            ],
            "src": "1451:557:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2042:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2059:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2062:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2052:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2052:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2052:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2156:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2159:4:4",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2149:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2149:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2149:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2180:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2183:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2173:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2173:15:4"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2014:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2251:269:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2261:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2275:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:1:4",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2271:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2261:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2292:38:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2322:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2328:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2318:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:12:4"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2296:18:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2369:51:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2383:27:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2397:6:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2405:4:4",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2393:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2393:17:4"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2383:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2349:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2342:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2342:26:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2339:81:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2472:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "2486:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2486:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2486:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2436:18:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2459:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2467:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2456:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2456:14:4"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2433:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2433:38:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2430:84:4"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2235:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2244:6:4",
                "type": ""
              }
            ],
            "src": "2200:320:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_RWD_$440(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_RWD_$440(value) {\n        if iszero(eq(value, cleanup_t_contract$_RWD_$440(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_RWD_$440_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_RWD_$440(value)\n    }\n\n    function cleanup_t_contract$_Tether_$621(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Tether_$621(value) {\n        if iszero(eq(value, cleanup_t_contract$_Tether_$621(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Tether_$621_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Tether_$621(value)\n    }\n\n    function abi_decode_tuple_t_contract$_RWD_$440t_contract$_Tether_$621_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_RWD_$440_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Tether_$621_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11060:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:4",
                "type": ""
              }
            ],
            "src": "7:99:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:4",
                "type": ""
              }
            ],
            "src": "112:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:258:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "346:10:4",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "355:1:4",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "350:1:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:3:4"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:1:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "436:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:11:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:4"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:1:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "455:3:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "455:11:4"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:18:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "429:39:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "429:39:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "376:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "373:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:13:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "387:19:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:15:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "398:1:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:2:4",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "394:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:10:4"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "389:1:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "369:3:4",
                    "statements": []
                  },
                  "src": "365:113:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:76:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:3:4"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "558:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "558:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "576:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:27:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:27:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "493:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "496:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:13:4"
                  },
                  "nodeType": "YulIf",
                  "src": "487:101:4"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "318:3:4",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "323:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "328:6:4",
                "type": ""
              }
            ],
            "src": "287:307:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:54:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "658:38:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "676:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:14:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:28:4"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "658:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "641:6:4",
                "type": ""
              }
            ],
            "src": "600:102:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:272:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:53:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "857:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "824:32:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:39:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "814:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:78:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "938:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "943:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "879:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:71:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "985:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:16:4"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "959:21:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:52:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:52:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:46:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1031:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1036:21:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:29:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:39:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "781:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "788:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "796:3:4",
                "type": ""
              }
            ],
            "src": "708:364:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:195:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1218:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1214:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1206:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1253:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1264:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1272:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1278:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:86:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1370:6:4"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1379:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:63:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:78:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1298:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1191:4:4",
                "type": ""
              }
            ],
            "src": "1078:313:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1442:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1452:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1467:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1474:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1463:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1452:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1424:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1434:7:4",
                "type": ""
              }
            ],
            "src": "1397:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1561:28:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1571:12:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1578:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1571:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1547:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1557:3:4",
                "type": ""
              }
            ],
            "src": "1529:60:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1655:82:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1665:66:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1723:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1705:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1705:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1696:8:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:34:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1678:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:53:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1665:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1635:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1645:9:4",
                "type": ""
              }
            ],
            "src": "1595:142:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1803:66:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1813:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1857:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1826:30:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:37:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1813:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1783:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1793:9:4",
                "type": ""
              }
            ],
            "src": "1743:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1946:66:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1956:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2000:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1969:30:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1969:37:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1956:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_RWD_$440_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1926:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1936:9:4",
                "type": ""
              }
            ],
            "src": "1875:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2094:77:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2111:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2158:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_RWD_$440_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2116:41:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2116:48:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2104:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:61:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2104:61:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_RWD_$440_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2082:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2089:3:4",
                "type": ""
              }
            ],
            "src": "2018:153:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2286:135:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2296:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2308:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2319:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2304:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2304:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2296:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2387:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2400:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2411:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2396:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2396:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_RWD_$440_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2332:54:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2332:82:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2332:82:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RWD_$440__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2258:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2270:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2281:4:4",
                "type": ""
              }
            ],
            "src": "2177:244:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2501:66:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2511:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2555:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2524:30:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2524:37:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2511:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Tether_$621_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2481:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2491:9:4",
                "type": ""
              }
            ],
            "src": "2427:140:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2652:80:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2669:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2719:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Tether_$621_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2674:44:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2674:51:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2662:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2662:64:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2662:64:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Tether_$621_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2640:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2647:3:4",
                "type": ""
              }
            ],
            "src": "2573:159:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:138:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2860:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2872:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2883:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2868:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2868:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2860:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2954:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2967:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2978:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2963:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2963:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Tether_$621_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2896:57:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:85:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2896:85:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Tether_$621__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2822:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2834:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2845:4:4",
                "type": ""
              }
            ],
            "src": "2738:250:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3034:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3044:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3060:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3054:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3054:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "3044:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3027:6:4",
                "type": ""
              }
            ],
            "src": "2994:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3164:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3181:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3184:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3174:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3174:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3174:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "3075:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3287:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3304:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3307:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3297:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "3198:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3366:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3376:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3405:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3387:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3376:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3348:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3358:7:4",
                "type": ""
              }
            ],
            "src": "3321:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3466:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3523:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3532:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3535:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3525:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3525:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3525:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3489:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3514:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3496:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3496:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3486:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3486:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3479:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3476:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3459:5:4",
                "type": ""
              }
            ],
            "src": "3423:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3603:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3613:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3635:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3622:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3613:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3678:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3651:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3651:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3651:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3581:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3589:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3597:5:4",
                "type": ""
              }
            ],
            "src": "3551:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3762:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3808:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3810:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3810:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3810:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3783:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3792:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3779:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3779:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3804:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3775:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3775:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3772:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3901:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3916:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3930:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3920:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3945:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3980:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3991:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3976:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3976:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4000:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3955:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3955:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3945:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3732:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3743:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3755:6:4",
                "type": ""
              }
            ],
            "src": "3696:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4073:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4083:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4108:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4101:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4101:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4094:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4083:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4055:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4065:7:4",
                "type": ""
              }
            ],
            "src": "4031:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4186:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4203:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4223:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4208:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4208:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4196:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4196:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4196:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4174:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4181:3:4",
                "type": ""
              }
            ],
            "src": "4127:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4334:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4344:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4356:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4367:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4352:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4352:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4344:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4418:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4431:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4442:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4427:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4427:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4380:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4380:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4380:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4306:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4318:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4329:4:4",
                "type": ""
              }
            ],
            "src": "4242:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4523:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4540:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4563:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4545:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4545:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4533:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4533:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4533:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4511:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4518:3:4",
                "type": ""
              }
            ],
            "src": "4458:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4680:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4690:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4702:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4713:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4698:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4690:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4770:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4783:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4794:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4779:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4779:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4726:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4726:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4726:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4652:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4664:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4675:4:4",
                "type": ""
              }
            ],
            "src": "4582:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4855:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4865:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4876:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4865:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4837:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4847:7:4",
                "type": ""
              }
            ],
            "src": "4810:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4958:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4975:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4998:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4980:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4980:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4968:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4968:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4968:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4946:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4953:3:4",
                "type": ""
              }
            ],
            "src": "4893:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5115:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5125:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5137:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5148:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5133:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5133:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5125:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5205:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5218:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5229:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5214:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5214:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5161:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5161:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5161:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5087:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5099:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5110:4:4",
                "type": ""
              }
            ],
            "src": "5017:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5288:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5345:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5354:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5357:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5347:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5347:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5347:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5311:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5336:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5318:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5318:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5308:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5308:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5301:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5301:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5298:63:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5281:5:4",
                "type": ""
              }
            ],
            "src": "5245:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5425:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5435:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5457:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5444:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5435:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5500:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5473:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5473:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5473:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5403:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5411:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5419:5:4",
                "type": ""
              }
            ],
            "src": "5373:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5584:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5630:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5632:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5632:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5632:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5605:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5614:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5601:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5601:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5626:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5597:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5597:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5594:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5723:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5738:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5752:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5742:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5767:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5802:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5813:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5798:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5798:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5822:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5777:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5777:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5767:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5554:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5565:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5577:6:4",
                "type": ""
              }
            ],
            "src": "5518:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5881:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5898:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5901:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5891:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5891:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5891:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5995:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5998:4:4",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5988:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5988:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6019:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6022:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6012:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6012:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6012:15:4"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "5853:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6090:269:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6100:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6114:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6120:1:4",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6110:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6110:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6100:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6131:38:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6161:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6167:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6157:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6157:12:4"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6135:18:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6208:51:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6222:27:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6236:6:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6244:4:4",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6232:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6232:17:4"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6222:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6188:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6181:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6181:26:4"
                  },
                  "nodeType": "YulIf",
                  "src": "6178:81:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6311:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "6325:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6325:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6325:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6275:18:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6298:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6306:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6295:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6295:14:4"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6272:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6272:38:4"
                  },
                  "nodeType": "YulIf",
                  "src": "6269:84:4"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6074:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6083:6:4",
                "type": ""
              }
            ],
            "src": "6039:320:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6393:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6410:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6413:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6403:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6403:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6403:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6507:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6510:4:4",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6500:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6500:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6500:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6531:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6534:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6524:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6524:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6524:15:4"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6365:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6579:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6596:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6599:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6589:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6589:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6589:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6693:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6696:4:4",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6686:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6686:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6686:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6717:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6720:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6710:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6710:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6710:15:4"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "6551:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6765:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6782:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6785:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6775:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6775:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6775:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6879:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6882:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6872:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6872:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6872:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6903:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6906:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6896:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6896:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6896:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6737:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6965:143:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6975:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6998:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6980:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6975:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7009:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7032:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7014:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7014:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7009:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7056:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "7058:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7058:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7058:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7053:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7046:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7046:9:4"
                  },
                  "nodeType": "YulIf",
                  "src": "7043:35:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7088:14:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7097:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7100:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7093:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7093:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7088:1:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6954:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6957:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6963:1:4",
                "type": ""
              }
            ],
            "src": "6923:185:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7240:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7250:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7262:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7273:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7258:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7258:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7250:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7330:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7343:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7354:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7339:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7339:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7286:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7286:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7286:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7411:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7424:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7435:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7420:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7420:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7367:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7367:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7367:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7204:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7216:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7224:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7235:4:4",
                "type": ""
              }
            ],
            "src": "7114:332:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7492:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7546:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7555:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7558:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7548:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7548:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7548:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7515:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7537:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7522:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7522:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7512:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7512:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7505:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7505:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "7502:60:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7485:5:4",
                "type": ""
              }
            ],
            "src": "7452:116:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7634:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7644:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7659:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7653:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7653:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7644:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7699:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7675:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7675:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7675:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7612:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7620:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7628:5:4",
                "type": ""
              }
            ],
            "src": "7574:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7791:271:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7837:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7839:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7839:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7839:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7812:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7821:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7808:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7808:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7833:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7804:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7804:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "7801:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7930:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7945:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7959:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7949:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7974:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8017:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8028:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8013:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8013:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8037:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7984:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7984:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7974:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7761:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7772:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7784:6:4",
                "type": ""
              }
            ],
            "src": "7717:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8111:190:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8121:33:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8148:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8130:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8130:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8121:5:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8244:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8246:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8246:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8246:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8169:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8176:66:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8166:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8166:77:4"
                  },
                  "nodeType": "YulIf",
                  "src": "8163:103:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8275:20:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8286:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8293:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8282:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8282:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8275:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8097:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8107:3:4",
                "type": ""
              }
            ],
            "src": "8068:233:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8413:117:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8435:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8443:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8431:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8431:14:4"
                      },
                      {
                        "hexValue": "63616e6e6f7420756e7374616b652076616c756573206c657373207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8447:34:4",
                        "type": "",
                        "value": "cannot unstake values less than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8424:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8424:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8424:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8503:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8511:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8499:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8499:15:4"
                      },
                      {
                        "hexValue": "7a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8516:6:4",
                        "type": "",
                        "value": "zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8492:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8492:31:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8492:31:4"
                }
              ]
            },
            "name": "store_literal_in_memory_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8405:6:4",
                "type": ""
              }
            ],
            "src": "8307:223:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8682:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8692:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8758:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8763:2:4",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8699:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8699:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8692:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8864:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82",
                      "nodeType": "YulIdentifier",
                      "src": "8775:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8775:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8775:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8877:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8888:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8893:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8884:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8884:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8877:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8670:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8678:3:4",
                "type": ""
              }
            ],
            "src": "8536:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9079:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9089:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9101:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9112:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9097:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9097:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9089:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9136:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9147:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9132:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9132:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9155:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9161:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9151:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9151:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9125:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9125:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9125:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9181:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9315:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9189:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9189:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9181:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9059:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9074:4:4",
                "type": ""
              }
            ],
            "src": "8908:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9439:62:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9461:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9469:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9457:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9457:14:4"
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9473:20:4",
                        "type": "",
                        "value": "amount cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9450:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9450:44:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9450:44:4"
                }
              ]
            },
            "name": "store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9431:6:4",
                "type": ""
              }
            ],
            "src": "9333:168:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9653:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9663:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9729:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9734:2:4",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9670:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9670:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9663:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9835:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                      "nodeType": "YulIdentifier",
                      "src": "9746:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9746:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9746:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9848:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9859:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9864:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9855:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9855:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9848:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9641:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9649:3:4",
                "type": ""
              }
            ],
            "src": "9507:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10050:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10060:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10072:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10083:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10068:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10068:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10060:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10107:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10118:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10103:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10103:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10126:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10132:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10122:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10122:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10096:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10096:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10096:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10152:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10286:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10160:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10160:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10152:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10030:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10045:4:4",
                "type": ""
              }
            ],
            "src": "9879:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10458:288:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10468:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10480:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10491:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10476:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10476:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10468:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10548:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10561:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10572:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10557:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10557:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10504:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10504:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10504:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10629:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10642:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10653:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10638:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10638:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10585:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10585:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10585:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10711:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10724:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10735:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10720:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10720:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10667:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10667:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10667:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10414:9:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10426:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10434:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10442:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10453:4:4",
                "type": ""
              }
            ],
            "src": "10304:442:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10796:261:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10806:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10829:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10811:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10811:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10806:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10840:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10863:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10845:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10845:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10840:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11003:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11005:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11005:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11005:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10924:1:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10931:66:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10999:1:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10927:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10927:74:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10921:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10921:81:4"
                  },
                  "nodeType": "YulIf",
                  "src": "10918:107:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11035:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11046:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11049:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11042:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11042:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11035:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10783:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10786:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10792:3:4",
                "type": ""
              }
            ],
            "src": "10752:305:4"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_RWD_$440_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_RWD_$440_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_RWD_$440_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_RWD_$440__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_RWD_$440_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_Tether_$621_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Tether_$621_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Tether_$621_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Tether_$621__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Tether_$621_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot unstake values less than \")\n\n        mstore(add(memPtr, 32), \"zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount cannot be 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "141:2662:0:-:0;;;205:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;751:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;812:4;806:3;;:10;;;;;;;;;;;;;;;;;;835:7;826:6;;:16;;;;;;;;;;;;;;;;;;860:10;852:5;;:18;;;;;;;;;;;;;;;;;;751:126;;141:2662;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:107::-;616:7;645:24;663:5;645:24;:::i;:::-;634:35;;568:107;;;:::o;681:144::-;765:35;794:5;765:35;:::i;:::-;758:5;755:46;745:74;;815:1;812;805:12;745:74;681:144;:::o;831:165::-;899:5;930:6;924:13;915:22;;946:44;984:5;946:44;:::i;:::-;831:165;;;;:::o;1002:110::-;1053:7;1082:24;1100:5;1082:24;:::i;:::-;1071:35;;1002:110;;;:::o;1118:150::-;1205:38;1237:5;1205:38;:::i;:::-;1198:5;1195:49;1185:77;;1258:1;1255;1248:12;1185:77;1118:150;:::o;1274:171::-;1345:5;1376:6;1370:13;1361:22;;1392:47;1433:5;1392:47;:::i;:::-;1274:171;;;;:::o;1451:557::-;1555:6;1563;1612:2;1600:9;1591:7;1587:23;1583:32;1580:119;;;1618:79;;:::i;:::-;1580:119;1738:1;1763:75;1830:7;1821:6;1810:9;1806:22;1763:75;:::i;:::-;1753:85;;1709:139;1887:2;1913:78;1983:7;1974:6;1963:9;1959:22;1913:78;:::i;:::-;1903:88;;1858:143;1451:557;;;;;:::o;2014:180::-;2062:77;2059:1;2052:88;2159:4;2156:1;2149:15;2183:4;2180:1;2173:15;2200:320;2244:6;2281:1;2275:4;2271:12;2261:22;;2328:1;2322:4;2318:12;2349:18;2339:81;;2405:4;2397:6;2393:17;2383:27;;2339:81;2467:2;2459:6;2456:14;2436:18;2433:38;2430:84;;;2486:18;;:::i;:::-;2430:84;2251:269;2200:320;;;:::o;141:2662:0:-;;;;;;;",
  "deployedSourceMap": "141:2662:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;301:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;275:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1623:620;;;:::i;:::-;;615:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;248:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;426:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2275:524;;;:::i;:::-;;519:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:691;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;354:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;205:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;301:14::-;;;;;;;;;;;;;:::o;275:20::-;;;;;;;;;;;;;:::o;1623:620::-;1851:6;1847:389;1864:7;:14;;;;1862:1;:16;1847:389;;;1938:17;1958:7;1966:1;1958:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1938:30;;2035:12;2077:1;2051:14;:25;2066:9;2051:25;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;2035:43;;2105:1;2095:7;:11;2092:134;;;2179:3;;;;;;;;;;;:12;;;2192:9;2203:7;2179:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2092:134;1883:353;;1879:3;;;;;:::i;:::-;;;;1847:389;;;;1623:620::o;615:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;248:20::-;;;;;;;;;;;;;:::o;426:46::-;;;;;;;;;;;;;;;;;:::o;2275:524::-;2352:12;2367:14;:26;2382:10;2367:26;;;;;;;;;;;;;;;;2352:41;;2467:1;2459:7;:9;2451:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2607:6;;;;;;;;;;;:15;;;2623:10;2635:7;2607:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2716:1;2687:14;:26;2702:10;2687:26;;;;;;;;;;;;;;;:30;;;;2787:5;2763:9;:21;2773:10;2763:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2307:492;2275:524::o;519:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;883:691::-;1009:1;1001:7;:9;993:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;1152:6;;;;;;;;;;;:19;;;1172:10;1192:4;1199:7;1152:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1308:7;1281:14;:26;1296:10;1281:26;;;;;;;;;;;;;;;;:34;;;;:::i;:::-;1252:14;:26;1267:10;1252:26;;;;;;;;;;;;;;;:63;;;;1378:9;:21;1388:10;1378:21;;;;;;;;;;;;;;;;;;;;;;;;;1374:75;;1414:7;1427:10;1414:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1374:75;1516:4;1492:9;:21;1502:10;1492:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1554:4;1530:9;:21;1540:10;1530:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;883:691;:::o;354:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1397:126::-;1434:7;1474:42;1467:5;1463:54;1452:65;;1397:126;;;:::o;1529:60::-;1557:3;1578:5;1571:12;;1529:60;;;:::o;1595:142::-;1645:9;1678:53;1696:34;1705:24;1723:5;1705:24;:::i;:::-;1696:34;:::i;:::-;1678:53;:::i;:::-;1665:66;;1595:142;;;:::o;1743:126::-;1793:9;1826:37;1857:5;1826:37;:::i;:::-;1813:50;;1743:126;;;:::o;1875:137::-;1936:9;1969:37;2000:5;1969:37;:::i;:::-;1956:50;;1875:137;;;:::o;2018:153::-;2116:48;2158:5;2116:48;:::i;:::-;2111:3;2104:61;2018:153;;:::o;2177:244::-;2281:4;2319:2;2308:9;2304:18;2296:26;;2332:82;2411:1;2400:9;2396:17;2387:6;2332:82;:::i;:::-;2177:244;;;;:::o;2427:140::-;2491:9;2524:37;2555:5;2524:37;:::i;:::-;2511:50;;2427:140;;;:::o;2573:159::-;2674:51;2719:5;2674:51;:::i;:::-;2669:3;2662:64;2573:159;;:::o;2738:250::-;2845:4;2883:2;2872:9;2868:18;2860:26;;2896:85;2978:1;2967:9;2963:17;2954:6;2896:85;:::i;:::-;2738:250;;;;:::o;3075:117::-;3184:1;3181;3174:12;3321:96;3358:7;3387:24;3405:5;3387:24;:::i;:::-;3376:35;;3321:96;;;:::o;3423:122::-;3496:24;3514:5;3496:24;:::i;:::-;3489:5;3486:35;3476:63;;3535:1;3532;3525:12;3476:63;3423:122;:::o;3551:139::-;3597:5;3635:6;3622:20;3613:29;;3651:33;3678:5;3651:33;:::i;:::-;3551:139;;;;:::o;3696:329::-;3755:6;3804:2;3792:9;3783:7;3779:23;3775:32;3772:119;;;3810:79;;:::i;:::-;3772:119;3930:1;3955:53;4000:7;3991:6;3980:9;3976:22;3955:53;:::i;:::-;3945:63;;3901:117;3696:329;;;;:::o;4031:90::-;4065:7;4108:5;4101:13;4094:21;4083:32;;4031:90;;;:::o;4127:109::-;4208:21;4223:5;4208:21;:::i;:::-;4203:3;4196:34;4127:109;;:::o;4242:210::-;4329:4;4367:2;4356:9;4352:18;4344:26;;4380:65;4442:1;4431:9;4427:17;4418:6;4380:65;:::i;:::-;4242:210;;;;:::o;4458:118::-;4545:24;4563:5;4545:24;:::i;:::-;4540:3;4533:37;4458:118;;:::o;4582:222::-;4675:4;4713:2;4702:9;4698:18;4690:26;;4726:71;4794:1;4783:9;4779:17;4770:6;4726:71;:::i;:::-;4582:222;;;;:::o;4810:77::-;4847:7;4876:5;4865:16;;4810:77;;;:::o;4893:118::-;4980:24;4998:5;4980:24;:::i;:::-;4975:3;4968:37;4893:118;;:::o;5017:222::-;5110:4;5148:2;5137:9;5133:18;5125:26;;5161:71;5229:1;5218:9;5214:17;5205:6;5161:71;:::i;:::-;5017:222;;;;:::o;5245:122::-;5318:24;5336:5;5318:24;:::i;:::-;5311:5;5308:35;5298:63;;5357:1;5354;5347:12;5298:63;5245:122;:::o;5373:139::-;5419:5;5457:6;5444:20;5435:29;;5473:33;5500:5;5473:33;:::i;:::-;5373:139;;;;:::o;5518:329::-;5577:6;5626:2;5614:9;5605:7;5601:23;5597:32;5594:119;;;5632:79;;:::i;:::-;5594:119;5752:1;5777:53;5822:7;5813:6;5802:9;5798:22;5777:53;:::i;:::-;5767:63;;5723:117;5518:329;;;;:::o;5853:180::-;5901:77;5898:1;5891:88;5998:4;5995:1;5988:15;6022:4;6019:1;6012:15;6039:320;6083:6;6120:1;6114:4;6110:12;6100:22;;6167:1;6161:4;6157:12;6188:18;6178:81;;6244:4;6236:6;6232:17;6222:27;;6178:81;6306:2;6298:6;6295:14;6275:18;6272:38;6269:84;;;6325:18;;:::i;:::-;6269:84;6090:269;6039:320;;;:::o;6365:180::-;6413:77;6410:1;6403:88;6510:4;6507:1;6500:15;6534:4;6531:1;6524:15;6551:180;6599:77;6596:1;6589:88;6696:4;6693:1;6686:15;6720:4;6717:1;6710:15;6737:180;6785:77;6782:1;6775:88;6882:4;6879:1;6872:15;6906:4;6903:1;6896:15;6923:185;6963:1;6980:20;6998:1;6980:20;:::i;:::-;6975:25;;7014:20;7032:1;7014:20;:::i;:::-;7009:25;;7053:1;7043:35;;7058:18;;:::i;:::-;7043:35;7100:1;7097;7093:9;7088:14;;6923:185;;;;:::o;7114:332::-;7235:4;7273:2;7262:9;7258:18;7250:26;;7286:71;7354:1;7343:9;7339:17;7330:6;7286:71;:::i;:::-;7367:72;7435:2;7424:9;7420:18;7411:6;7367:72;:::i;:::-;7114:332;;;;;:::o;7452:116::-;7522:21;7537:5;7522:21;:::i;:::-;7515:5;7512:32;7502:60;;7558:1;7555;7548:12;7502:60;7452:116;:::o;7574:137::-;7628:5;7659:6;7653:13;7644:22;;7675:30;7699:5;7675:30;:::i;:::-;7574:137;;;;:::o;7717:345::-;7784:6;7833:2;7821:9;7812:7;7808:23;7804:32;7801:119;;;7839:79;;:::i;:::-;7801:119;7959:1;7984:61;8037:7;8028:6;8017:9;8013:22;7984:61;:::i;:::-;7974:71;;7930:125;7717:345;;;;:::o;8068:233::-;8107:3;8130:24;8148:5;8130:24;:::i;:::-;8121:33;;8176:66;8169:5;8166:77;8163:103;;;8246:18;;:::i;:::-;8163:103;8293:1;8286:5;8282:13;8275:20;;8068:233;;;:::o;8307:223::-;8447:34;8443:1;8435:6;8431:14;8424:58;8516:6;8511:2;8503:6;8499:15;8492:31;8307:223;:::o;8536:366::-;8678:3;8699:67;8763:2;8758:3;8699:67;:::i;:::-;8692:74;;8775:93;8864:3;8775:93;:::i;:::-;8893:2;8888:3;8884:12;8877:19;;8536:366;;;:::o;8908:419::-;9074:4;9112:2;9101:9;9097:18;9089:26;;9161:9;9155:4;9151:20;9147:1;9136:9;9132:17;9125:47;9189:131;9315:4;9189:131;:::i;:::-;9181:139;;8908:419;;;:::o;9333:168::-;9473:20;9469:1;9461:6;9457:14;9450:44;9333:168;:::o;9507:366::-;9649:3;9670:67;9734:2;9729:3;9670:67;:::i;:::-;9663:74;;9746:93;9835:3;9746:93;:::i;:::-;9864:2;9859:3;9855:12;9848:19;;9507:366;;;:::o;9879:419::-;10045:4;10083:2;10072:9;10068:18;10060:26;;10132:9;10126:4;10122:20;10118:1;10107:9;10103:17;10096:47;10160:131;10286:4;10160:131;:::i;:::-;10152:139;;9879:419;;;:::o;10304:442::-;10453:4;10491:2;10480:9;10476:18;10468:26;;10504:71;10572:1;10561:9;10557:17;10548:6;10504:71;:::i;:::-;10585:72;10653:2;10642:9;10638:18;10629:6;10585:72;:::i;:::-;10667;10735:2;10724:9;10720:18;10711:6;10667:72;:::i;:::-;10304:442;;;;;;:::o;10752:305::-;10792:3;10811:20;10829:1;10811:20;:::i;:::-;10806:25;;10845:20;10863:1;10845:20;:::i;:::-;10840:25;;10999:1;10931:66;10927:74;10924:1;10921:81;10918:107;;;11005:18;;:::i;:::-;10918:107;11049:1;11046;11042:9;11035:16;;10752:305;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n// importing other contracts\nimport './RWD.sol';\nimport './Tether.sol';\n\n\n\n\ncontract DecentralBank {\n    //setup variables for the bank\n    string public name = 'Decentral Bank';\n    address public owner;\n\n    Tether public tether;\n    RWD public rwd;\n\n    //keep track of our stakers\n    address[] public stakers;\n\n    // keep track of who is staking what\n    mapping(address => uint) public stakingBlanace;\n    // to check who staked before or not\n    mapping(address => bool) public hasStaked;\n    // to check if investor is currently staking\n    mapping(address => bool) public isStaking;\n\n    // the constructor takes reward and tehter token and set arguments to the contracts\n    constructor(RWD _rwd, Tether _tether) public {\n        rwd = _rwd;\n        tether = _tether;\n        owner = msg.sender;\n    }\n\n    function depositTokens(uint _amount) public{\n        // the amount must be greater than zero to stake\n        require(_amount>0,'amount cannot be 0');\n\n        // trasnfer tether tokens to this contract address from the person calling this contract for staking\n        tether.transferFrom(msg.sender, address(this), _amount);\n\n        // updtae staking balance\n        stakingBlanace[msg.sender] = stakingBlanace[msg.sender]+_amount;\n\n        // check if they have not staked before\n        if(!hasStaked[msg.sender]){\n            stakers.push(msg.sender);\n        }\n\n        // update staking blance\n        isStaking[msg.sender] = true;\n        hasStaked[msg.sender] = true;\n        \n    }\n\n    // issue reward tokens for the stakers\n    function issueTokens() public{\n\n        // only owner issues tokens\n        //require(msg.sender == owner, 'The issuer must be the owner');\n\n        // loop to itterate through and stakers and reward who are staking\n        for(uint i = 0;i<stakers.length;i++){\n            //keep track of each address\n            address recipient = stakers[i];\n            // get how much the recipient is staking\n            uint balance =  stakingBlanace[recipient]/9;\n            if(balance > 0){\n                // send transfer rward tokens to user\n                rwd.transfer(recipient, balance);\n            }\n        }\n\n    }\n\n    // unstaking function\n    function unstakeTokens() public {\n\n        // get balance of staking\n        uint balance = stakingBlanace[msg.sender];\n\n        // require amount to be greater than 0\n        require(balance>0,'cannot unstake values less than zero');\n\n        // transfer thet tokens unstaked to the specified contract adress from the bank\n        tether.transfer(msg.sender, balance);\n\n        // reset staking balance\n        stakingBlanace[msg.sender] = 0;\n\n        // Updating staking status\n        isStaking[msg.sender] = false;\n    } \n\n}\n",
  "sourcePath": "C:\\Users\\notal\\Desktop\\final project\\Staking-Dapp\\src\\contracts\\DecentralBank.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/DecentralBank.sol",
    "exportedSymbols": {
      "DecentralBank": [
        201
      ],
      "RWD": [
        440
      ],
      "Tether": [
        621
      ]
    },
    "id": 202,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/src/contracts/RWD.sol",
        "file": "./RWD.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 202,
        "sourceUnit": 441,
        "src": "94:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/Tether.sol",
        "file": "./Tether.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 202,
        "sourceUnit": 622,
        "src": "114:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DecentralBank",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 201,
        "linearizedBaseContracts": [
          201
        ],
        "name": "DecentralBank",
        "nameLocation": "150:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 6,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "219:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "205:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "205:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "446563656e7472616c2042616e6b",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "226:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_517b48598670b90dc9ba54628155bce1ee7091baf20941f742e78f9b9a2bb10f",
                "typeString": "literal_string \"Decentral Bank\""
              },
              "value": "Decentral Bank"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "263:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "248:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "248:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5efc071a",
            "id": 11,
            "mutability": "mutable",
            "name": "tether",
            "nameLocation": "289:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "275:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tether_$621",
              "typeString": "contract Tether"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "Tether",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 621,
                "src": "275:6:0"
              },
              "referencedDeclaration": 621,
              "src": "275:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tether_$621",
                "typeString": "contract Tether"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a8972d3",
            "id": 14,
            "mutability": "mutable",
            "name": "rwd",
            "nameLocation": "312:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "301:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RWD_$440",
              "typeString": "contract RWD"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "RWD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 440,
                "src": "301:3:0"
              },
              "referencedDeclaration": 440,
              "src": "301:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RWD_$440",
                "typeString": "contract RWD"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 17,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "371:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "354:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "354:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 16,
              "nodeType": "ArrayTypeName",
              "src": "354:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8fe9e486",
            "id": 21,
            "mutability": "mutable",
            "name": "stakingBlanace",
            "nameLocation": "458:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "426:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "434:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "426:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "445:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c93c8f34",
            "id": 25,
            "mutability": "mutable",
            "name": "hasStaked",
            "nameLocation": "551:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "519:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "519:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 23,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "538:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f49712b",
            "id": 29,
            "mutability": "mutable",
            "name": "isStaking",
            "nameLocation": "647:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "615:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "623:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "615:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 27,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "634:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "796:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "rwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "806:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$440",
                        "typeString": "contract RWD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_rwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "812:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$440",
                        "typeString": "contract RWD"
                      }
                    },
                    "src": "806:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$440",
                      "typeString": "contract RWD"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "806:10:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "tether",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "826:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$621",
                        "typeString": "contract Tether"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_tether",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "835:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$621",
                        "typeString": "contract Tether"
                      }
                    },
                    "src": "826:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$621",
                      "typeString": "contract Tether"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "826:16:0"
                },
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "852:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 47,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "860:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "860:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "852:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "852:18:0"
                }
              ]
            },
            "id": 52,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_rwd",
                  "nameLocation": "767:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "763:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RWD_$440",
                    "typeString": "contract RWD"
                  },
                  "typeName": {
                    "id": 31,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30,
                      "name": "RWD",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 440,
                      "src": "763:3:0"
                    },
                    "referencedDeclaration": 440,
                    "src": "763:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$440",
                      "typeString": "contract RWD"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_tether",
                  "nameLocation": "780:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "773:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Tether_$621",
                    "typeString": "contract Tether"
                  },
                  "typeName": {
                    "id": 34,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33,
                      "name": "Tether",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 621,
                      "src": "773:6:0"
                    },
                    "referencedDeclaration": 621,
                    "src": "773:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$621",
                      "typeString": "contract Tether"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "762:26:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:0:0"
            },
            "scope": 201,
            "src": "751:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "926:648:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1001:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1009:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1001:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1011:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "993:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "993:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1172:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1172:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 71,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1192:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DecentralBank_$201",
                              "typeString": "contract DecentralBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DecentralBank_$201",
                              "typeString": "contract DecentralBank"
                            }
                          ],
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1184:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 69,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1184:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1184:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1199:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64,
                        "name": "tether",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1152:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$621",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 620,
                      "src": "1152:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:55:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 76,
                        "name": "stakingBlanace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1252:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "expression": {
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1267:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1267:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1252:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 80,
                          "name": "stakingBlanace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1281:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 83,
                        "indexExpression": {
                          "expression": {
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1296:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1296:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1281:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 84,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1281:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1252:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:63:0"
                },
                {
                  "condition": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1377:22:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 88,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1378:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 91,
                      "indexExpression": {
                        "expression": {
                          "id": 89,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1388:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1388:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1378:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1374:75:0",
                  "trueBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1400:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 96,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1427:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1427:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 93,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "1414:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1414:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:24:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1492:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1502:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1502:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1492:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1516:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1492:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:28:0"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 109,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1530:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1540:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1540:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1530:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1554:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1530:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:28:0"
                }
              ]
            },
            "functionSelector": "dd49756e",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "892:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "911:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "906:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:14:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:0:0"
            },
            "scope": 201,
            "src": "883:691:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1652:591:0",
              "statements": [
                {
                  "body": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "1883:353:0",
                    "statements": [
                      {
                        "assignments": [
                          132
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 132,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "1946:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 157,
                            "src": "1938:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1938:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 136,
                        "initialValue": {
                          "baseExpression": {
                            "id": 133,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1958:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 135,
                          "indexExpression": {
                            "id": 134,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1966:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1958:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1938:30:0"
                      },
                      {
                        "assignments": [
                          138
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 138,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "2040:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 157,
                            "src": "2035:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 137,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2035:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 144,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 139,
                              "name": "stakingBlanace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "2051:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 141,
                            "indexExpression": {
                              "id": 140,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "2066:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2051:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "39",
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2077:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          },
                          "src": "2051:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2035:43:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 145,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "2095:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2105:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2095:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 156,
                        "nodeType": "IfStatement",
                        "src": "2092:134:0",
                        "trueBody": {
                          "id": 155,
                          "nodeType": "Block",
                          "src": "2107:119:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 151,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "2192:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 152,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "2203:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 148,
                                    "name": "rwd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14,
                                    "src": "2179:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RWD_$440",
                                      "typeString": "contract RWD"
                                    }
                                  },
                                  "id": 150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 379,
                                  "src": "2179:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2179:32:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 154,
                              "nodeType": "ExpressionStatement",
                              "src": "2179:32:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 124,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "1862:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 125,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1864:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1864:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1862:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "initializationExpression": {
                    "assignments": [
                      121
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1856:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "1851:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 123,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1860:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1851:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1879:3:0",
                      "subExpression": {
                        "id": 128,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1879:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130,
                    "nodeType": "ExpressionStatement",
                    "src": "1879:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1847:389:0"
                }
              ]
            },
            "functionSelector": "60ab5852",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueTokens",
            "nameLocation": "1632:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:2:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:0:0"
            },
            "scope": 201,
            "src": "1623:620:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2307:492:0",
              "statements": [
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2357:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2352:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2352:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "baseExpression": {
                      "id": 165,
                      "name": "stakingBlanace",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2367:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 168,
                    "indexExpression": {
                      "expression": {
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2382:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2382:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2367:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2352:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 171,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "2459:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2467:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2459:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f7420756e7374616b652076616c756573206c657373207468616e207a65726f",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82",
                          "typeString": "literal_string \"cannot unstake values less than zero\""
                        },
                        "value": "cannot unstake values less than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82",
                          "typeString": "literal_string \"cannot unstake values less than zero\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2451:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2451:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2623:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2623:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 182,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "2635:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 177,
                        "name": "tether",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2607:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$621",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 560,
                      "src": "2607:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:36:0"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 185,
                        "name": "stakingBlanace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2687:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 188,
                      "indexExpression": {
                        "expression": {
                          "id": 186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2702:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2702:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2687:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2716:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2687:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:30:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2763:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "expression": {
                          "id": 193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2773:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2773:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2763:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2787:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2763:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:29:0"
                }
              ]
            },
            "functionSelector": "a5ce413b",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "2284:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2297:2:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2307:0:0"
            },
            "scope": 201,
            "src": "2275:524:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 202,
        "src": "141:2662:0",
        "usedErrors": []
      }
    ],
    "src": "32:2772:0"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/DecentralBank.sol",
    "exportedSymbols": {
      "DecentralBank": [
        201
      ],
      "RWD": [
        440
      ],
      "Tether": [
        621
      ]
    },
    "id": 202,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/src/contracts/RWD.sol",
        "file": "./RWD.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 202,
        "sourceUnit": 441,
        "src": "94:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/Tether.sol",
        "file": "./Tether.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 202,
        "sourceUnit": 622,
        "src": "114:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DecentralBank",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 201,
        "linearizedBaseContracts": [
          201
        ],
        "name": "DecentralBank",
        "nameLocation": "150:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 6,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "219:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "205:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "205:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "446563656e7472616c2042616e6b",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "226:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_517b48598670b90dc9ba54628155bce1ee7091baf20941f742e78f9b9a2bb10f",
                "typeString": "literal_string \"Decentral Bank\""
              },
              "value": "Decentral Bank"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "263:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "248:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "248:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5efc071a",
            "id": 11,
            "mutability": "mutable",
            "name": "tether",
            "nameLocation": "289:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "275:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tether_$621",
              "typeString": "contract Tether"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "Tether",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 621,
                "src": "275:6:0"
              },
              "referencedDeclaration": 621,
              "src": "275:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tether_$621",
                "typeString": "contract Tether"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a8972d3",
            "id": 14,
            "mutability": "mutable",
            "name": "rwd",
            "nameLocation": "312:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "301:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RWD_$440",
              "typeString": "contract RWD"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "RWD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 440,
                "src": "301:3:0"
              },
              "referencedDeclaration": 440,
              "src": "301:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RWD_$440",
                "typeString": "contract RWD"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 17,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "371:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "354:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "354:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 16,
              "nodeType": "ArrayTypeName",
              "src": "354:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8fe9e486",
            "id": 21,
            "mutability": "mutable",
            "name": "stakingBlanace",
            "nameLocation": "458:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "426:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "434:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "426:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "445:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c93c8f34",
            "id": 25,
            "mutability": "mutable",
            "name": "hasStaked",
            "nameLocation": "551:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "519:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "519:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 23,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "538:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f49712b",
            "id": 29,
            "mutability": "mutable",
            "name": "isStaking",
            "nameLocation": "647:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "615:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "623:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "615:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 27,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "634:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "796:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "rwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "806:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$440",
                        "typeString": "contract RWD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_rwd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "812:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWD_$440",
                        "typeString": "contract RWD"
                      }
                    },
                    "src": "806:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$440",
                      "typeString": "contract RWD"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "806:10:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "tether",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "826:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$621",
                        "typeString": "contract Tether"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_tether",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "835:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$621",
                        "typeString": "contract Tether"
                      }
                    },
                    "src": "826:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$621",
                      "typeString": "contract Tether"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "826:16:0"
                },
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "852:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 47,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "860:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "860:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "852:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "852:18:0"
                }
              ]
            },
            "id": 52,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_rwd",
                  "nameLocation": "767:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "763:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RWD_$440",
                    "typeString": "contract RWD"
                  },
                  "typeName": {
                    "id": 31,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30,
                      "name": "RWD",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 440,
                      "src": "763:3:0"
                    },
                    "referencedDeclaration": 440,
                    "src": "763:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWD_$440",
                      "typeString": "contract RWD"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_tether",
                  "nameLocation": "780:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "773:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Tether_$621",
                    "typeString": "contract Tether"
                  },
                  "typeName": {
                    "id": 34,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33,
                      "name": "Tether",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 621,
                      "src": "773:6:0"
                    },
                    "referencedDeclaration": 621,
                    "src": "773:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$621",
                      "typeString": "contract Tether"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "762:26:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:0:0"
            },
            "scope": 201,
            "src": "751:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "926:648:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1001:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1009:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1001:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1011:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "993:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "993:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1172:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1172:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 71,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1192:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DecentralBank_$201",
                              "typeString": "contract DecentralBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DecentralBank_$201",
                              "typeString": "contract DecentralBank"
                            }
                          ],
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1184:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 69,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1184:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1184:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1199:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64,
                        "name": "tether",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1152:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$621",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 620,
                      "src": "1152:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:55:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 76,
                        "name": "stakingBlanace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1252:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "expression": {
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1267:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1267:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1252:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 80,
                          "name": "stakingBlanace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1281:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 83,
                        "indexExpression": {
                          "expression": {
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1296:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1296:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1281:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 84,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1281:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1252:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:63:0"
                },
                {
                  "condition": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1377:22:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 88,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1378:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 91,
                      "indexExpression": {
                        "expression": {
                          "id": 89,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1388:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1388:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1378:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1374:75:0",
                  "trueBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1400:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 96,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1427:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1427:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 93,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "1414:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1414:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:24:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1492:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1502:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1502:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1492:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1516:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1492:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:28:0"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 109,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1530:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1540:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1540:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1530:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1554:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1530:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:28:0"
                }
              ]
            },
            "functionSelector": "dd49756e",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "892:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "911:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "906:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:14:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:0:0"
            },
            "scope": 201,
            "src": "883:691:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1652:591:0",
              "statements": [
                {
                  "body": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "1883:353:0",
                    "statements": [
                      {
                        "assignments": [
                          132
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 132,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "1946:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 157,
                            "src": "1938:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1938:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 136,
                        "initialValue": {
                          "baseExpression": {
                            "id": 133,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1958:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 135,
                          "indexExpression": {
                            "id": 134,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1966:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1958:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1938:30:0"
                      },
                      {
                        "assignments": [
                          138
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 138,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "2040:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 157,
                            "src": "2035:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 137,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2035:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 144,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 139,
                              "name": "stakingBlanace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "2051:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 141,
                            "indexExpression": {
                              "id": 140,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "2066:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2051:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "39",
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2077:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          },
                          "src": "2051:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2035:43:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 145,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "2095:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2105:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2095:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 156,
                        "nodeType": "IfStatement",
                        "src": "2092:134:0",
                        "trueBody": {
                          "id": 155,
                          "nodeType": "Block",
                          "src": "2107:119:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 151,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "2192:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 152,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138,
                                    "src": "2203:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 148,
                                    "name": "rwd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14,
                                    "src": "2179:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RWD_$440",
                                      "typeString": "contract RWD"
                                    }
                                  },
                                  "id": 150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 379,
                                  "src": "2179:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2179:32:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 154,
                              "nodeType": "ExpressionStatement",
                              "src": "2179:32:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 124,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "1862:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 125,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1864:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1864:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1862:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 158,
                  "initializationExpression": {
                    "assignments": [
                      121
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1856:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "1851:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 123,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1860:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1851:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1879:3:0",
                      "subExpression": {
                        "id": 128,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1879:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130,
                    "nodeType": "ExpressionStatement",
                    "src": "1879:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1847:389:0"
                }
              ]
            },
            "functionSelector": "60ab5852",
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueTokens",
            "nameLocation": "1632:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:2:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:0:0"
            },
            "scope": 201,
            "src": "1623:620:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2307:492:0",
              "statements": [
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2357:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2352:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2352:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "baseExpression": {
                      "id": 165,
                      "name": "stakingBlanace",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2367:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 168,
                    "indexExpression": {
                      "expression": {
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2382:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2382:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2367:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2352:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 171,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "2459:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2467:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2459:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f7420756e7374616b652076616c756573206c657373207468616e207a65726f",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82",
                          "typeString": "literal_string \"cannot unstake values less than zero\""
                        },
                        "value": "cannot unstake values less than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_417e4b7d91d757cc87f888e55e87622b998c41636bd4f08441a5b79e7f124f82",
                          "typeString": "literal_string \"cannot unstake values less than zero\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2451:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2451:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2623:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2623:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 182,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "2635:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 177,
                        "name": "tether",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2607:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$621",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 560,
                      "src": "2607:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:36:0"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 185,
                        "name": "stakingBlanace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2687:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 188,
                      "indexExpression": {
                        "expression": {
                          "id": 186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2702:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2702:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2687:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2716:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2687:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:30:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2763:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "expression": {
                          "id": 193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2773:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2773:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2763:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2787:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2763:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:29:0"
                }
              ]
            },
            "functionSelector": "a5ce413b",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "2284:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2297:2:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2307:0:0"
            },
            "scope": 201,
            "src": "2275:524:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 202,
        "src": "141:2662:0",
        "usedErrors": []
      }
    ],
    "src": "32:2772:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xD7220c7CB0CbC273ad40c62af833D17c4A1A88FD",
      "transactionHash": "0x36377d17d3736769abc327b6dc8f4a12d7c31c674e54bf00fc7eeab0faff3851"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-24T15:35:59.125Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}