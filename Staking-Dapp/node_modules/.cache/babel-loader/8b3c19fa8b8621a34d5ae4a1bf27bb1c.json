{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\notal\\\\Desktop\\\\Final Project\\\\Staking-Dapp\\\\src\\\\components\\\\App.js\";\n// main applications where to render all the componenets\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport _Web from \"web3\"; // create class for component\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"Web3\",\n    // web3 detect metamask when loading page\n    value: function () {\n      var _Web2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 6;\n                  break;\n                }\n\n                // create new instance for web3\n                window.web3 = new _Web(window.ethereum);\n                _context.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  // if we find web3 then we go with the provider\n                  window.web3 = new _Web(window.web3.currentProvider);\n                } else {\n                  window.alert(\"No ethereum browser detected, example: MetaMast\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function Web3() {\n        return _Web2.apply(this, arguments);\n      }\n\n      return Web3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // innitializing state\n\n    _this.state = {\n      account: \"0x0\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Hello, World\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/notal/Desktop/Final Project/Staking-Dapp/src/components/App.js"],"names":["React","Component","Navbar","Web3","App","window","ethereum","web3","enable","currentProvider","alert","props","state","account"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;IACMC,G;;;;;AACJ;;;;;;;qBAGMC,MAAM,CAACC,Q;;;;;AACT;AACAD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACD,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACtB;AACAF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAHM,MAGA;AACLJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,iDAAb;AACD;;;;;;;;;;;;;;;;;;AAGH,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAHiB;AAMlB;;;;6BAEQ;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAFF,CADF;AAQD;;;;EAjCeZ,S;;AAoClB,eAAeG,GAAf","sourcesContent":["// main applications where to render all the componenets\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./Navbar\";\r\nimport Web3 from \"web3\";\r\n\r\n// create class for component\r\nclass App extends Component {\r\n  // web3 detect metamask when loading page\r\n  async Web3() {\r\n    // if we detect metamask\r\n    if (window.ethereum) {\r\n      // create new instance for web3\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      // if we find web3 then we go with the provider\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\"No ethereum browser detected, example: MetaMast\");\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // innitializing state\r\n    this.state = {\r\n      account: \"0x0\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"text-center\">\r\n          <h1>Hello, World</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}